colors: red,yellow,blue
created: 20140213201252073
creator: Stephan Hradek
eu-countries: Austria, Belgium, Bulgaria, Croatia, Cyprus, Czech, Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Latvia, Lithuania, Luxembourg, Malta, Netherlands, Poland, Portugal, Romania, Slovakia, Slovenia, Spain, Sweden, United Kingdom
modified: 20140430214229049
modifier: Stephan Hradek
modules-used: [[$:/core/modules/filters/split.js]]
title: Selfmade Lists
tags: example filter
source-wiki: http://tiddlystuff.tiddlyspot.com/#Selfmade%20Lists

You might know that the field called "list" is a special field. Its value is in fact a list which can be used by the list widget. Now several times already users asked whether or not it is possible to use other fields as lists.

If you ever programmed in JavaScript, you know that there is a string method called "split" which allows to split a string into an array. This method is now also available as a filter function. An example:

This tiddler has a field "colors" with the content ''{{!!colors}}''. Using the split function, this field can be split into a list: ``{{{ [ is[current]] +[split:colors[,]] }}}``

{{{ [is[current]] +[split:colors[,]] }}}

Another field is "eu-countries" containing ''{{!!eu-countries}}''. As you see, the seperator here is a space followed by some whitespace. So a regular expression seems appropriate:

``{{{ [is[current]] +[split:eu-countries/\s*,\s*/] }}}``

{{{ [is[current]] +[split:eu-countries/\s*,\s*/] }}}

! Please note!

split is not compatible to TW 5.0.10 at the moment. Please find athe compatible source here. I will fix it soonâ€¦

```
/*\
title: $:/core/modules/filters/split.js
type: application/javascript
module-type: filteroperator

Filter operator for splitting each current list element
into several new elements.

\*/
(function(){

/*jslint node: true, browser: true */
/*global $tw: false */
"use strict";

/*
Export our filter function
*/
exports.split = function(source,operator,options) {
//console.log(source,operator,options);
	var results = [],
		fieldname = (operator.suffix || operator.operator || "title").toLowerCase();
	source(function(tiddler,title) {
		if(tiddler) {
			var splitted,
				text = tiddler.getFieldString(fieldname);
			if(operator.regexp) {
				splitted = text.split(operator.regexp);
			} else {
				splitted = text.split(operator.operand);
			}
			if(splitted) {
				$tw.utils.pushTop(results,splitted);
			}
		}
	});
	return results;
};

})();
```