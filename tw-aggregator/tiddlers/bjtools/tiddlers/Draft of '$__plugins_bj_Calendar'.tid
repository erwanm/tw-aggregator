author: JeffreyWilkinson
core-version: >=5.1.3
created: 20141103185750273
dependents: 
description: calendar with date formatter addons
draft.of: $:/plugins/bj/Calendar
draft.title: $:/plugins/bj/Calendar
modified: 20141205190352490
plugin-type: plugin
source: https://github.com/buggyj/TW5-Calendar
title: Draft of '$:/plugins/bj/Calendar'
type: application/json
version: 0.0.5
source-wiki: http://bjtools.tiddlyspot.com/#Draft%20of%20'$__plugins_bj_Calendar'

{
    "tiddlers": {
        "$:/macros/buggyj/Calendar/base.js": {
            "text": "/*\\\ntitle: $:/macros/buggyj/Calendar/base.js\ntype: application/javascript\nmodule-type: macro\n\n<<diary year month>>\n<<diary year>> - year calendar\n<<diary>> - this month\n\nOptions:$:/macros/diary/options.json\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\nCAL demo\n*/\n\nexports.name = \"calendarbase\";\n\nexports.params = [\n\t{ name: \"year\" },{ name: \"month\" },{ name: \"opts\" }\n];\n/*\nRun the macro\n*/\n\nexports.run = function(year, month,opts) {\nif (!opts) opts=\"default\";\nvar options = $tw.wiki.getTiddlerData(\"$:/config/bj/Calendar.json\")[opts]||\n\t\t\t\t{lastDayOfWeek:\"6\",formatter:\"\",titlebold:\"\",highlightThisDay:\"\",highlightThisDate:\"\"};\nvar createMonth;\ntry {\n\tcreateMonth = require(options.formatter).createMonth;\n} catch (e) {\n\tcreateMonth= function(mnth,year){\n\t\tvar month=[];\n\t\tfor (var i=1;i < 1+daysInMonth(mnth,year);i++) month[i] = i;\n\t\treturn month;\n\t}\n} \nvar boldtitle=(options.titlebold=='yes')?'!':'';\nvar day_of_week = (function () { \n\tvar days = [];\n\tfor (var i = 0; i < 7; i++) {days[i] = $tw.language.getString(\"Date/Short/Day/\" + i); } \n\treturn days;\n})();\nvar month_of_year = (function () { \n\tvar months = [];\n\tfor (var i = 1; i < 13; i++) {months[i] = $tw.language.getString(\"Date/Long/Month/\" + i); } \n\treturn months;\n})(); \nvar Calendar = new Date();\nvar thisyear = Calendar.getFullYear();  //  year (xxxx)\nvar thismonth = Calendar.getMonth()+1;\t//  month (0-11)\nvar thisday = Calendar.getDay();        //  day (0-6)\nvar WEEKFIN = parseInt(options.lastDayOfWeek);               \nvar MONTHS_IN_YEAR=12;\t\t\t\t\t\n                           \nvar lf ='\\n';\nvar cal='<div>'+lf+lf; \nvar ayear=thisyear;\nif (!!month) {\n\tif (!!year) {\n\t\tcal+=calendar (month,year,options);\n\t} else {\n\t\tcal+=calendar (month,thisyear,options);\n\t}\n} else {\n\tif (!!year) {\n\t\t\tcal+=titleOfYear(year); \n\t\toptions.seperateYearHeading = 'yes';\n\t\tayear=year; \n\t\tfor(var i=0; i<MONTHS_IN_YEAR; i+=2)\n\t\t\tcal+=splicetable(calendar (i+1,ayear,options),calendar (i+2,ayear,options));\n\t}\n\telse {\n\t\t\tcal+=calendar (thismonth,thisyear,options);\t\n\t}\n}\nreturn cal+lf+lf+'</div>';\n\nfunction calendar (mnth,year,options){\n    var month =\tcreateMonth(mnth,year,options);\n    var blankdays = (firstDayInMonth(mnth,year)+13-WEEKFIN)%7;\n\treturn titleOfMonth(mnth,year)+createWeekHeading()+\n\t       formatAsMonth(month,blankdays);\n}\nfunction titleOfMonth(mth,year) {\n\tif (!!options.seperateYearHeading ) {\n\t\treturn '|>|>|>|'+ centre(boldtitle+ month_of_year[mth]) +'|<|<|<|'+lf;\n\t} else {\n\t\treturn '|>|>|>|'+ centre(boldtitle+ month_of_year[mth]  + '  ' + year) +'|<|<|<|'+lf;\n\t}\n}\n\nfunction titleOfYear(year) {\n\t\treturn '|>|>|>|>|>|>|>|'+ centre('!'+year) +'|<|<|<|<|<|<|<|'+lf;\n}\nfunction centre (x){ return ' '+x+' ';}\n\nfunction formatAsMonth(month,blankdays){\t\n\tvar theday,blank=['','|','||','|||','||||','|||||','||||||','|||||||'];\t\n\tvar cal=blank[blankdays];//pad out before first day of month\n\tfor(var i=1; i < month.length;i++){//first '0' month element is not used\n\t\tcal+='|'+month[i];\n\t\ttheday=(i+blankdays-1)%7;\n\t\tif (theday == 6) cal += '|' + lf; \n\t}\n\tif (theday !== 6) cal += blank[7 - theday] + lf;//pad out rest of week, if needed\n\treturn cal ;\n}\nfunction createWeekHeading(){\n\t\tvar daystitle=[],weekdays= day_of_week.slice(0);\n\t\t// highlight today's day of week\n\t\tif (options.highlightThisDay=='yes')weekdays[thisday] ='!'+weekdays[thisday];\n\t\tfor (var i=0;i < weekdays.length; i++) daystitle[i] =centre(weekdays[(i+1+WEEKFIN)%7]);\n\t\treturn '|'+daystitle.join('|')+'|'+lf; \n}\nfunction daysInMonth(iMonth, iYear){\n\t\treturn 32 - new Date(iYear, iMonth-1, 32).getDate();\n\t}\nfunction firstDayInMonth(iMonth, iYear){\n\t\treturn new Date(iYear, iMonth-1, 1).getDay();\n\t} \nfunction splicetable (a,b) {\n\tvar i,cal='',taba =a.split('\\n'),tabb=b.split('|\\n');\n\tvar limit=(taba.length<tabb.length)?taba.length:tabb.length;//shortest\n\tfor (i=0;i<limit-1;i++) \t\tcal+=taba[i]+tabb[i]+'|'+lf;\t \n\tfor (;i < taba.length-1;i++) \tcal+=taba[i]+\"||||||||\"+lf;\n\tfor (;i < tabb.length-1;i++) \tcal+=\"||||||||\"+tabb[i]+lf;\n\treturn cal;\n}\t\t   \n}  \n\n})();\n",
            "title": "$:/macros/buggyj/Calendar/base.js",
            "type": "application/javascript",
            "module-type": "macro"
        },
        "$:/plugins/bj/calendar/sidbar": {
            "caption": "Calendar",
            "tags": "$:/tags/SideBar",
            "title": "$:/plugins/bj/calendar/sidbar",
            "type": "text/vnd.tiddlywiki",
            "text": "<$reveal state=\"$:/temp/plugins/bj/Calendar\" text=\"Year\" type=\"nomatch\">\n  <$button set=\"$:/temp/plugins/bj/Calendar\" setTo=\"Year\">Year</$button>\n  <<calendar \"\" \"\">>\n</$reveal>\n<$reveal state=\"$:/temp/plugins/bj/Calendar\" text=\"Year\" type=\"match\">\n  <$button set=\"$:/temp/plugins/bj/Calendar\" setTo=\"Month\">Month</$button>\n<<calendar 2014 \"\">>\n</$reveal>\n"
        },
        "$:/macros/bj/Calendar/diary.js": {
            "text": "/*\\\ntitle: $:/macros/bj/Calendar/diary.js\ntype: application/javascript\nmodule-type: global\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\ncalendar demo\n*/\nvar Calendar=new Date();\nvar createMonth= function(mnth,year,options){\n\tvar month=[];\n\tfor (var i=1;i < 1+daysInMonth(mnth,year);i++) month[i] = createDate(i,mnth,year,options);\n\treturn month;\n}\nfunction createDate(i,mnth,year,options){\n\tvar strong='',tiddlerDate,format = $tw.wiki.getTiddlerText(\"$:/config/NewJournal/Title\") || \"YYYY MM DD\";\n\tvar date=(new Date(year, mnth-1, i));\n\tif (options.highlightLinks==\"yes\") strong ='!';\n\t\n\ttiddlerDate = $tw.utils.formatDateString(date,format);\n   \n\tif ($tw.wiki.getTiddler(tiddlerDate))return centre(strong+'[['+i+'|'+tiddlerDate+']]');\n\treturn  centre('[['+i+'|'+tiddlerDate+']]');\n}\nfunction daysInMonth(iMonth, iYear){\n\t\treturn 32 - new Date(iYear, iMonth-1, 32).getDate();\n\t}\nfunction centre (x){ return ' '+x+' ';}\nexports.createMonth = createMonth;\n})();\n",
            "title": "$:/macros/bj/Calendar/diary.js",
            "type": "application/javascript",
            "module-type": "global"
        },
        "$:/macros/buggyj/Calendar/entry.js": {
            "text": "/*\\\ntitle: $:/macros/buggyj/Calendar/entry.js\ntype: application/javascript\nmodule-type: macro\n\n<<calendar year month>>\n<<calendar year>> - year calendar\n<<calendar>> - this month\n\nOptions:$:/macros/diary/options.json\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\nCAL demo\n*/\n\nexports.name = \"calendar\";\n\nexports.params = [\n\t{ name: \"year\" },{ name: \"month\" },{ name: \"opts\" }\n];\n/*\nRun the macro\n*/\n\nexports.run = function(year, month,opts) {\nreturn '<$macrorefresh $name=\"calendarbase\" year=\"'+year+'\" month=\"'+month+'\" opts=\"'+opts+'\" $refresh=\"calendarrefresh\"/>';\n}\n\n})();\n",
            "title": "$:/macros/buggyj/Calendar/entry.js",
            "type": "application/javascript",
            "module-type": "macro"
        },
        "$:/macros/buggyj/Calendar/entry2.js": {
            "text": "/*\\\ntitle: $:/macros/buggyj/Calendar/entry2.js\ntype: application/javascript\nmodule-type: macro\n\n<<diary year month>>\n<<diary year>> - year calendar\n<<diary>> - this month\n\nOptions:$:/macros/diary/options.json\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\nCAL demo\n*/\n\nexports.name = \"diary\";\n\nexports.params = [\n\t{ name: \"year\" },{ name: \"month\" },{ name: \"opts\" }\n];\n/*\nRun the macro\n*/\n\nexports.run = function(year, month,opts) {\n\tvar tags = $tw.wiki.getTiddlerText(\"$:/config/NewJournal/Tags\");\n\tif (!opts) opts = \"diary\";\n\treturn '<$ifnew fields=\"\"\"{\"tags\":\"'+tags+'\"}\"\"\">' +\n\t'<$macrorefresh $name=\"calendarbase\" year=\"'+year+'\" month=\"'+month+'\" opts=\"'+opts+'\" $refresh=\"calendarrefresh\"/>'+ '</$ifnew>';\n}\n\n})();\n",
            "title": "$:/macros/buggyj/Calendar/entry2.js",
            "type": "application/javascript",
            "module-type": "macro"
        },
        "$:/macros/bj/Calendar/journalfmt.js": {
            "text": "/*\\\ntitle: $:/macros/bj/Calendar/journalfmt.js\ntype: application/javascript\nmodule-type: global\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\ncalendar demo\n*/\nvar Calendar=new Date();\nvar createMonth= function(mnth,year,options){\n\tvar month=[];\n\tfor (var i=1;i < 1+daysInMonth(mnth,year);i++) month[i] = createDate(i,mnth,year,options);\n\treturn month;\n}\nfunction createDate(i,mnth,year,options){\n\tvar strong='',tiddlerDate;\n\tvar date=(new Date(year, mnth, i));\n\tif (date.toDateString()===Calendar.toDateString()&&options.highlightThisDate==\"yes\") strong ='!';\n\ttiddlerDate=date.getDate()+\n\t              ' '+$tw.language.getString(\"Date/Long/Month/\" + (date.getMonth()))+' '+date.getFullYear();\n   \n\tif ($tw.wiki.getTiddler(tiddlerDate)!==undefined)  strong ='!';\n\treturn centre(strong+'[['+i+'|'+tiddlerDate+']]');\n}\nfunction daysInMonth(iMonth, iYear){\n\t\treturn 32 - new Date(iYear, iMonth, 32).getDate();\n\t}\nfunction centre (x){ return ' '+x+' ';}\nexports.createMonth = createMonth;\n})();\n",
            "title": "$:/macros/bj/Calendar/journalfmt.js",
            "type": "application/javascript",
            "module-type": "global"
        },
        "$:/macros/bj/Calendar/journalslinked.js": {
            "text": "/*\\\ntitle: $:/macros/bj/Calendar/journalslinked.js\ntype: application/javascript\nmodule-type: global\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\ncalendar demo\n*/\nvar Calendar=new Date();\nvar createMonth= function(mnth,year,options){\n\tvar month=[];\n\tfor (var i=1;i < 1+daysInMonth(mnth,year);i++) month[i] = createDate(i,mnth,year,options);\n\treturn month;\n}\nfunction createDate(i,mnth,year,options){\n\tvar strong='',tiddlerDate,format = $tw.wiki.getTiddlerText(\"$:/config/NewJournal/Title\") || \"YYYY MM DD\";\n\tvar date=(new Date(year, mnth-1, i));\n\tif (options.highlightLinks==\"yes\") strong ='!';\n\t\n\ttiddlerDate = $tw.utils.formatDateString(date,format);\n   \n\tif ($tw.wiki.getTiddler(tiddlerDate))return centre(strong+'[['+i+'|'+tiddlerDate+']]');\n\treturn i;\n}\nfunction daysInMonth(iMonth, iYear){\n\t\treturn 32 - new Date(iYear, iMonth-1, 32).getDate();\n\t}\nfunction centre (x){ return ' '+x+' ';}\nexports.createMonth = createMonth;\n})();\n",
            "title": "$:/macros/bj/Calendar/journalslinked.js",
            "type": "application/javascript",
            "module-type": "global"
        },
        "$:/config/bj/Calendar.json": {
            "type": "application/json",
            "title": "$:/config/bj/Calendar.json",
            "module-type": "library",
            "text": "\n{\n\t\"journals\":{\n\t\t\"lastDayOfWeek\":\"0\",\n\t\t\"formatter\":\"$:/macros/bj/Calendar/journalfmt.js\",\n\t\t\"titlebold\":\"no\",\n\t\t\"highlightThisDay\":\"no\",\n\t\t\"highlightThisDate\":\"yes\"\n\t},\n\t\"default\":{\n\t\t\"lastDayOfWeek\":\"0\",\n\t\t\"formatter\":\"$:/macros/bj/Calendar/journalslinked.js\",\n\t\t\"titlebold\":\"yes\",\n\t\t\"highlightThisDay\":\"no\",\n\t\t\"highlightLinks\":\"yes\"\n\t},\n\t\"diary\":{\n\t\t\"lastDayOfWeek\":\"0\",\n\t\t\"formatter\":\"$:/macros/bj/Calendar/diary.js\",\n\t\t\"titlebold\":\"yes\",\n\t\t\"highlightThisDay\":\"no\",\n\t\t\"highlightLinks\":\"yes\"\n\t},\n\t\"plain\":{\n\t\t\"lastDayOfWeek\":\"0\",\n\t\t\"formatter\":\"\",\n\t\t\"titlebold\":\"yes\",\n\t\t\"highlightThisDay\":\"yes\",\n\t\t\"highlightThisDate\":\"no\"\n\t}\n}\n"
        },
        "$:/core/modules/widgets/macrorefresh.js": {
            "text": "/*\\\ntitle: $:/core/modules/widgets/macrorefresh.js\ntype: application/javascript\nmodule-type: widget\n\nMacrocall widget\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar MacroCallWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\n\n/*\nInherit from the base widget class\n*/\nMacroCallWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nMacroCallWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tthis.renderChildren(parent,nextSibling);\n};\n\n/*\nCompute the internal state of the widget\n*/\nMacroCallWidget.prototype.execute = function() {\n\tvar self = this;\n\t// Get the parse type if specified\n\tthis.parseType = this.getAttribute(\"$type\",\"text/vnd.tiddlywiki\");\n\tthis.renderOutput = this.getAttribute(\"$output\",\"text/html\");\n\t// Merge together the parameters specified in the parse tree with the specified attributes\n\tthis.params = this.parseTreeNode.params ? this.parseTreeNode.params.slice(0) : [];\n\t$tw.utils.each(this.attributes,function(attribute,name) {\n\t\tif(name.charAt(0) !== \"$\") {\n\t\t\tself.params.push({name: name, value: attribute});\t\t\t\n\t\t}\n\t});\n\t// Get the macro value\n\tvar text = this.getVariable(this.parseTreeNode.name || this.getAttribute(\"$name\"),{params: this.params}),\n\t\tparseTreeNodes;\n\t// Are we rendering to HTML?\n\tif(this.renderOutput === \"text/html\") {\n\t\t// If so we'll return the parsed macro\n\t\tvar parser = this.wiki.parseText(this.parseType,text,\n\t\t\t\t\t\t\t{parseAsInline: !this.parseTreeNode.isBlock});\n\t\tparseTreeNodes = parser ? parser.tree : [];\n\t} else {\n\t\t// Otherwise, we'll render the text\n\t\tvar plainText = this.wiki.renderText(\"text/plain\",this.parseType,text,{parentWidget: this});\n\t\tparseTreeNodes = [{type: \"text\", text: plainText}];\n\t}\n\t// Construct the child widgets\n\tthis.makeChildWidgets(parseTreeNodes);\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nMacroCallWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif($tw.utils.count(changedAttributes) > 0) {\n\t\t// Rerender ourselves\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} \n\t//else  \n\tif (this.getAttribute(\"$refresh\")) {\n\t\tvar params = this.params.slice(0);\n\t\tparams.push({name: \"changedTiddlers\", value: changedTiddlers});\n\t\tif (this.getVariable(this.getAttribute(\"$refresh\"),{params: params})) {\n\t\t\t\t\t// Rerender ourselves\n\t\t\tthis.refreshSelf();\n\t\t\treturn true;\n\t\t} \n\t//else \n\t}\n\treturn this.refreshChildren(changedTiddlers);\n\n};\n\nexports.macrorefresh = MacroCallWidget;\n\n})();\n",
            "title": "$:/core/modules/widgets/macrorefresh.js",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/macros/buggyj/Calendar/ifnew.js": {
            "text": "/*\\\ntitle: $:/macros/buggyj/Calendar/ifnew.js\ntype: application/javascript\nmodule-type: widget\n\nLinkcatcher widget\n\nToDo - add message param to listen for other mssg and action to set other actions (link just create)\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar IfNewWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n\tthis.addEventListeners([\n\t\t{type: \"tm-navigate\", handler: \"handleNavigateEvent\"}\n\t]);\n};\n\n/*\nInherit from the base widget class\n*/\nIfNewWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nIfNewWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tthis.renderChildren(parent,nextSibling);\n};\n\n/*\nCompute the internal state of the widget\n*/\nIfNewWidget.prototype.execute = function() {\n\t// Get our parameters\n\tthis.fields = this.getAttribute(\"fields\");\n\tthis.catchMessage = this.getAttribute(\"message\");\n\t// Construct the child widgets\n\tthis.makeChildWidgets();\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nIfNewWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.fields || changedAttributes.message ) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn this.refreshChildren(changedTiddlers);\t\t\n\t}\n};\n\n/*\nHandle a tm-navigate event\n*/\nIfNewWidget.prototype.handleNavigateEvent = function(event) {\n\tvar tiddler = this.wiki.getTiddler(event.navigateTo),fds;\n\tif(tiddler) return true;\n\ttry {\n\t\tfds=JSON.parse(this.fields);\n\t} catch(e) {\n\t\tfds={};\n\t}\n\tfds.title = event.navigateTo;\n\tif(this.parentWidget) {\n\t\tthis.parentWidget.dispatchEvent({\n\t\t\ttype: \"tm-new-tiddler\",\n\t\t\tparam: fds\n\t\t});\n\t}\n\treturn false;\n};\n\nexports.ifnew = IfNewWidget;\n\n})();\n",
            "title": "$:/macros/buggyj/Calendar/ifnew.js",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/macros/buggyj/Calendar/refresh.js": {
            "text": "/*\\\ntitle: $:/macros/buggyj/Calendar/refresh.js\ntype: application/javascript\nmodule-type: macro\n\n<<diary year month>>\n<<diary year>> - year calendar\n<<diary>> - this month\n\nOptions:$:/macros/diary/options.json\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\nCAL demo\n*/\n\nexports.name = \"calendarrefresh\";\n\nexports.params = [\n\t{ name: \"year\" },{ name: \"month\" },{ name: \"opts\" },{name:\"changedTiddlers\"}\n];\n \n// Source: http://stackoverflow.com/questions/497790\nvar dates = {\n    convert:function(d) {\n        // Converts the date in d to a date-object. The input can be:\n        //   a date object: returned without modification\n        //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\n        //   a number     : Interpreted as number of milliseconds\n        //                  since 1 Jan 1970 (a timestamp) \n        //   a string     : Any format supported by the javascript engine, like\n        //                  \"YYYY/MM/DD\", \"MM/DD/YYYY\", \"Jan 31 2009\" etc.\n        //  an object     : Interpreted as an object with year, month and date\n        //                  attributes.  **NOTE** month is 0-11.\n        return (\n            d.constructor === Date ? d :\n            d.constructor === Array ? new Date(d[0],d[1],d[2]) :\n            d.constructor === Number ? new Date(d) :\n            d.constructor === String ? new Date(d) :\n            typeof d === \"object\" ? new Date(d.year,d.month,d.date) :\n            NaN\n        );\n    },\n    compare:function(a,b) {\n        // Compare two dates (could be of any type supported by the convert\n        // function above) and returns:\n        //  -1 : if a < b\n        //   0 : if a = b\n        //   1 : if a > b\n        // NaN : if a or b is an illegal date\n        // NOTE: The code inside isFinite does an assignment (=).\n        return (\n            isFinite(a=this.convert(a).valueOf()) &&\n            isFinite(b=this.convert(b).valueOf()) ?\n            (a>b)-(a<b) :\n            NaN\n        );\n    },\n    inRange:function(d,start,end) {\n        // Checks if date in d is between dates in start and end.\n        // Returns a boolean or NaN:\n        //    true  : if d is between start and end (inclusive)\n        //    false : if d is before start or after end\n        //    NaN   : if one or more of the dates is illegal.\n        // NOTE: The code inside isFinite does an assignment (=).\n       return (\n            isFinite(d=this.convert(d).valueOf()) &&\n            isFinite(start=this.convert(start).valueOf()) &&\n            isFinite(end=this.convert(end).valueOf()) ?\n            start <= d && d <= end :\n            NaN\n        );\n    }\n}\n/*\nRun the macro\n*/\n\nexports.run = function(year, month,opts,changedTiddlers) {\n\n\tvar found = false;\n\tvar journaltag = \"Journal\";\n\t\n\t$tw.utils.each(changedTiddlers,function(attribute,name) {\n\t\tif (attribute.deleted) {\n\t\t\treturn;\n\t\t}\n\t\tvar tiddler = $tw.wiki.getTiddler(name);\n\t\tvar tags = (tiddler.fields.tags || []).slice(0);\n\t\t\n\t\tif(tags.indexOf(journaltag) != -1) {\n\t\t\tfound = true;\t\n\t\t}\n\t});\n\tif (found) return \"found\";\n\treturn \"\"; \n} \n\n})();\n",
            "title": "$:/macros/buggyj/Calendar/refresh.js",
            "type": "application/javascript",
            "module-type": "macro"
        }
    }
}